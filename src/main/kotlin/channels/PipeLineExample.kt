package channelsimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.cancelChildrenimport kotlinx.coroutines.channels.ReceiveChannelimport kotlinx.coroutines.channels.produceimport kotlinx.coroutines.runBlockingfun main() {    runBlocking {        val numbers = produceNumbers()        val squares = squares(numbers)        for (i in 1..5)                println(squares.receive())        println("Done")        coroutineContext.cancelChildren()    }}fun CoroutineScope.produceNumbers() =  produce<Int>{    var x = 1    while(true)        send(x++)}fun CoroutineScope.squares(numbers: ReceiveChannel<Int>) = produce {   for(x in numbers)       send(x*x)}