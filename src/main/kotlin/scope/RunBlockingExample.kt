import kotlinx.coroutines.delayimport kotlinx.coroutines.launchimport kotlinx.coroutines.runBlocking/** * In the below example the run blocking block the execution of main thread until all the child coroutines * defined inside runBlocking block executed * * * This is the sequence of execution *  Main thread started    Run blocking executing    Coroutine executed inside launch    Main thread execution end */fun main() {    println("Main thread started")    runBlocking {        println("Run blocking executing")        launch {            delay(5000)            println("Coroutine executed inside launch")        }    }    println("Main thread execution end")}