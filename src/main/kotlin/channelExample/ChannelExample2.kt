package channelExampleimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.channels.consumeEachimport kotlinx.coroutines.channels.produceimport kotlinx.coroutines.runBlockingimport java.nio.channels.Channelfun main() {    runBlocking {         val channel = produce {             for(x in 1..5){                 send(x*x)             }         }        for (y in channel){            println(y)        }// another way        for (x in produceSquare()){            println("-- $x")        }//        another way        produceSquare().consumeEach {            println(it)        }    }}// to make it more simplerfun CoroutineScope.produceSquare() = produce {    for(x in 1..5){        send(x*x)    }}