package exceptionHandlingInFlowimport kotlinx.coroutines.flow.*import kotlinx.coroutines.runBlockingfun main() {    runBlocking {        onCompletionExample()    }}suspend fun onCompletionExample(){    (1..3).asFlow()        .onEach{ check(it != 2) }        .onCompletion{ cause ->            if(cause != null)                println("Flow Completed with $cause")            else                println("Flow Completed Successfully")        }        .catch{ e -> println("Caught Exception $e") }        .collect{ println(it) }}